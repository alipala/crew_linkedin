search_linkedin_posts:
  description: >
    Find LinkedIn posts about {topics} that have gone viral (100+ reactions) in the last 4 days.
    Analyze:
    - Post structure and formatting
    - Hook effectiveness
    - Use of examples/case studies
    - Call-to-action strength
    - Comment engagement quality
    Pay special attention to posts from recognized tech influencers.
  expected_output: >
    Detailed analysis of 5-10 viral posts including:
    - Post URLs and engagement metrics
    - Key elements that drove virality
    - Pattern analysis across successful posts
    - Specific techniques used in hooks and closes
  agent: linkedin_post_search_agent
  task_kwargs:
    topics: "{topics}"
  input_schema:
    type: object
    properties:
      topics:
        type: array
        items:
          type: string

analyze_engagement:
  description: >
    Perform deep analysis of the viral posts discovered to understand:
    - Common elements driving engagement
    - Writing patterns that resonated
    - Topic angles that worked best
    - Timing and audience factors
    - Response patterns in comments
  expected_output: >
    Strategic insights including:
    - Top 3 engagement patterns
    - Most effective content structures
    - Best-performing topic angles
    - Recommended writing style elements
    - Engagement optimization suggestions
  agent: linkedin_interaction_analyze_agent

generate_ideas:
  description: >
    Using the engagement analysis, brainstorm content ideas that:
    - Combine technical depth with broad appeal
    - Fill identified content gaps
    - Build on successful patterns
    - Offer unique perspectives
    - Have high viral potential
  expected_output: >
    List of 5 content ideas with:
    - Compelling angles
    - Target audience definition
    - Key technical elements to cover
    - Viral potential analysis
    - Suggested hook approaches
  agent: brainstorm_agent

conduct_web_search:
  description: >
    Perform a detailed web search to find blogs, articles, and research papers relevant to the chosen topic. Utilize tools like Google Serper and ArXiv.
  expected_output: >
    A structured list of references, categorized by source type, relevance, and reliability.
  agent: web_search_agent

compose_blog_content:
  description: >
    Create and publish a technical blog post based on the web search results to Hashnode:
    1. Create engaging, well-structured content between 500-1000 words that hooks readers from the start
    2. Format with proper markdown, ensuring optimal readability and visual hierarchy
    3. Include code examples where relevant, with clear explanations and practical use cases
    4. Break content into clear sections with headers that guide the reader's journey
    5. Add relevant technical details and explanations that balance depth with accessibility
    6. Include reference links to authoritative sources that strengthen credibility
    7. Generate and add a cover image that captures attention and reflects the content
    8. Structure content for maximum engagement:
       - Compelling headline that drives clicks
       - Strong opening hook that establishes value
       - Clear examples and actionable insights
       - Strategic subheadings for easy scanning
       - Engaging conclusion with clear takeaways
    9. Optimize for both technical accuracy and shareability
    10. Publish to Hashnode and ensure proper formatting
    11. Return the published URL and metadata

  expected_output: >
    Published blog post URL and metadata including:
    - Post URL
    - Title
    - Cover image URL
    - Word count

  agent: blog_agent
  context: [conduct_web_search]

create_post:
  description: >
    Transform the blog content into a viral LinkedIn post:
    - Craft an attention-grabbing hook
    - Structure for maximum readability
    - Use strategic spacing and formatting
    - Include relevant emojis
    - End with engagement-driving CTA
    Consider LinkedIn's algorithm preferences and user reading patterns.
  expected_output: >
    A LinkedIn post that:
    - Captures attention in first 2 lines
    - Uses optimal formatting
    - Includes strategic emojis
    - Ends with engaging CTA
    - Links to blog effectively
  agent: post_create_agent
  context: [compose_blog_content]

notify_user:
  description: >
   Send this LinkedIn post for review via Slack using the following format:
            Input format: A dictionary containing 'context' with the post data.
            The post data should include 'title' and 'content' fields."""
    Send the LinkedIn post draft to the user via Slack for review. The notification should include 
    the complete post content and allow for user feedback.
  expected_output: >
   Confirmation of the Slack notification being sent
  agent: notification_agent

publish_post:
  description: >
    Share the approved LinkedIn post on the user's profile with appropriate formatting and timing.
  expected_output: >
    A successfully published LinkedIn post with optimized reach and engagement.

share_linkedin_post:
  description: >
    Share the approved LinkedIn post using the LinkedIn API.
    Ensure professional formatting and proper API integration.
  expected_output: >
    Confirmation of successful post sharing on LinkedIn with post URL
  agent: share_agent
  context:
    - create_post